# Gradle


# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: CmdLine@2
  inputs:
    script: |
      echo Downloading geosupport

      curl -O https://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/linux_geo21b_21_2.zip && unzip -o *.zip -d ./geosupport && rm *.zip
      
      export GS_LIBRARY_PATH=./geosupport/lib
      export GEOFILES=./geosupport/fls
      export GS_INCLUDE_PATH=./geosupport/include/foruser
      echo Done
    workingDirectory: ''
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m -PgsLibraryPath=./geosupport/lib -PgsGeofiles=./geosupport/fls -PgsIncludePath=./geosupport/include/foruser'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
